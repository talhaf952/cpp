Class:
* User Defined data type
* It holds its own data Members and data Functions
* These can be accessed and used by creating instance of a class.
* It is like bluePrint for an object

Syntax:

Class class_Name
{
	Access Specifier:
	Private: / Public: / Protected:

	Data Members;	//Variables to be used.

	Member Functions()  //Methods to access data members
	{
	body of function;
	}
};

=====================================================================

Objects:
* Is an instance of a class
* When class is defined, no memory is allocated
* When Object is  created, memory is allocated

Syntax:
class_Name objName;
obj.memberName;
obj.memberFunction();

* The data Member and Member Function of a class can be accessed by using dot(.) operator with Object Name.

class MyClass {       // The class
  public:             // Access specifier
    int myNum;        // Attribute (int variable)
    string myString;  // Attribute (string variable)
};


int main() {
  MyClass myObj;  // Create an object of MyClass

  // Access attributes and set values
  myObj.myNum = 15; 
  myObj.myString = "Some text";

  // Print attribute values
  cout << myObj.myNum << "\n";
  cout << myObj.myString;
  return 0;
}
